//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DBref {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DatabaseSoap", Namespace="http://blackjackwebservice.azurewebsites.net")]
    public partial class Database : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SignUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCurrencyAmountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Database() {
            this.Url = global::Properties.Settings.Default.Assembly_CSharp_net_azurewebsites_blackjackwebservice_Database;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SignUpCompletedEventHandler SignUpCompleted;
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event CurrencyAmountCompletedEventHandler CurrencyAmountCompleted;
        
        /// <remarks/>
        public event UpdateCurrencyAmountCompletedEventHandler UpdateCurrencyAmountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://blackjackwebservice.azurewebsites.net/SignUp", RequestNamespace="http://blackjackwebservice.azurewebsites.net", ResponseNamespace="http://blackjackwebservice.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SignUp(string userName, string key) {
            object[] results = this.Invoke("SignUp", new object[] {
                        userName,
                        key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SignUpAsync(string userName, string key) {
            this.SignUpAsync(userName, key, null);
        }
        
        /// <remarks/>
        public void SignUpAsync(string userName, string key, object userState) {
            if ((this.SignUpOperationCompleted == null)) {
                this.SignUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignUpOperationCompleted);
            }
            this.InvokeAsync("SignUp", new object[] {
                        userName,
                        key}, this.SignUpOperationCompleted, userState);
        }
        
        private void OnSignUpOperationCompleted(object arg) {
            if ((this.SignUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignUpCompleted(this, new SignUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://blackjackwebservice.azurewebsites.net/Authenticate", RequestNamespace="http://blackjackwebservice.azurewebsites.net", ResponseNamespace="http://blackjackwebservice.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Authenticate(string userName, string hash) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        userName,
                        hash});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string userName, string hash) {
            this.AuthenticateAsync(userName, hash, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string userName, string hash, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        userName,
                        hash}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://blackjackwebservice.azurewebsites.net/CurrencyAmount", RequestNamespace="http://blackjackwebservice.azurewebsites.net", ResponseNamespace="http://blackjackwebservice.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyAmount(string userName) {
            object[] results = this.Invoke("CurrencyAmount", new object[] {
                        userName});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyAmountAsync(string userName) {
            this.CurrencyAmountAsync(userName, null);
        }
        
        /// <remarks/>
        public void CurrencyAmountAsync(string userName, object userState) {
            if ((this.CurrencyAmountOperationCompleted == null)) {
                this.CurrencyAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyAmountOperationCompleted);
            }
            this.InvokeAsync("CurrencyAmount", new object[] {
                        userName}, this.CurrencyAmountOperationCompleted, userState);
        }
        
        private void OnCurrencyAmountOperationCompleted(object arg) {
            if ((this.CurrencyAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyAmountCompleted(this, new CurrencyAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://blackjackwebservice.azurewebsites.net/UpdateCurrencyAmount", RequestNamespace="http://blackjackwebservice.azurewebsites.net", ResponseNamespace="http://blackjackwebservice.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double UpdateCurrencyAmount(string userName, double newAmount) {
            object[] results = this.Invoke("UpdateCurrencyAmount", new object[] {
                        userName,
                        newAmount});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCurrencyAmountAsync(string userName, double newAmount) {
            this.UpdateCurrencyAmountAsync(userName, newAmount, null);
        }
        
        /// <remarks/>
        public void UpdateCurrencyAmountAsync(string userName, double newAmount, object userState) {
            if ((this.UpdateCurrencyAmountOperationCompleted == null)) {
                this.UpdateCurrencyAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCurrencyAmountOperationCompleted);
            }
            this.InvokeAsync("UpdateCurrencyAmount", new object[] {
                        userName,
                        newAmount}, this.UpdateCurrencyAmountOperationCompleted, userState);
        }
        
        private void OnUpdateCurrencyAmountOperationCompleted(object arg) {
            if ((this.UpdateCurrencyAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCurrencyAmountCompleted(this, new UpdateCurrencyAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SignUpCompletedEventHandler(object sender, SignUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CurrencyAmountCompletedEventHandler(object sender, CurrencyAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateCurrencyAmountCompletedEventHandler(object sender, UpdateCurrencyAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCurrencyAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCurrencyAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591